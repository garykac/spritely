//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spritely.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Spritely.Resources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}x{1} pixels.
        /// </summary>
        internal static string BgImageSizeFormat {
            get {
                return ResourceManager.GetString("BgImageSizeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _copy.
        /// </summary>
        internal static string CopySuffix {
            get {
                return ResourceManager.GetString("CopySuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the currently selected sprite?.
        /// </summary>
        internal static string DeleteCurrentSprite {
            get {
                return ResourceManager.GetString("DeleteCurrentSprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to erase the data in the currently selected sprite?.
        /// </summary>
        internal static string EraseCurrentSprite {
            get {
                return ResourceManager.GetString("EraseCurrentSprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: .
        /// </summary>
        internal static string ERROR {
            get {
                return ResourceManager.GetString("ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid sprite name.
        ///Valid names must begin with a letter and contain only &apos;A&apos;-&apos;Z&apos;, &apos;a&apos;-&apos;z&apos;, &apos;0&apos;-&apos;9&apos; and &apos;_&apos; characters.
        ///
        ///Fixing up sprite name - changing from &apos;{0}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string ErrorInvalidSpriteName {
            get {
                return ResourceManager.GetString("ErrorInvalidSpriteName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid sprite size ({0}) for sprite named &apos;{1}&apos;..
        /// </summary>
        internal static string ErrorInvalidSpriteSize {
            get {
                return ResourceManager.GetString("ErrorInvalidSpriteSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong number of colors in palette with ID=&apos;{0}&apos;. Found {1}, expected 16..
        /// </summary>
        internal static string ErrorNumColorsInPalette {
            get {
                return ResourceManager.GetString("ErrorNumColorsInPalette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong number of colors in palette..
        /// </summary>
        internal static string ErrorNumColorsInPalette0 {
            get {
                return ResourceManager.GetString("ErrorNumColorsInPalette0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many tiles specified for sprite &apos;{0}&apos;..
        /// </summary>
        internal static string ErrorSpriteTooManyTiles {
            get {
                return ResourceManager.GetString("ErrorSpriteTooManyTiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception was thrown while load the project template files: {0}.
        /// </summary>
        internal static string ExceptionLoadTemplate {
            get {
                return ResourceManager.GetString("ExceptionLoadTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception was thrown while opening the project file for writing: {0}.
        /// </summary>
        internal static string ExceptionOpenProjectWrite {
            get {
                return ResourceManager.GetString("ExceptionOpenProjectWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception was thrown while opening the file for writing: {0}.
        /// </summary>
        internal static string ExceptionOpenWrite {
            get {
                return ResourceManager.GetString("ExceptionOpenWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception was thrown while parsing the XML file: {0}.
        /// </summary>
        internal static string ExceptionParseXML {
            get {
                return ResourceManager.GetString("ExceptionParseXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to export!.
        /// </summary>
        internal static string ExportFail {
            get {
                return ResourceManager.GetString("ExportFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully exported {0} project to &quot;{1}&quot;..
        /// </summary>
        internal static string ExportProjectSuccess {
            get {
                return ResourceManager.GetString("ExportProjectSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully exported {0} sprite data to &quot;{1}&quot;..
        /// </summary>
        internal static string ExportSpritesSuccess {
            get {
                return ResourceManager.GetString("ExportSpritesSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update the entire project. This will overwrite any game code you have written.
        ///Use this option when creating a new project..
        /// </summary>
        internal static string ExportTooltipCompleteProject {
            get {
                return ResourceManager.GetString("ExportTooltipCompleteProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update only the sprites, tiles and maps.
        ///Use this option when you want to update your project with updated graphics..
        /// </summary>
        internal static string ExportTooltipSprites {
            get {
                return ResourceManager.GetString("ExportTooltipSprites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update all files except game_state.cpp and game_state.h.
        ///Use this option to update your project to the latest code without overwriting your game code..
        /// </summary>
        internal static string ExportTooltipUpdateProject {
            get {
                return ResourceManager.GetString("ExportTooltipUpdateProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested file &apos;{0}&apos; doesn&apos;t exist..
        /// </summary>
        internal static string FileDoesntExist {
            get {
                return ResourceManager.GetString("FileDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Tools array and the ToolType enum are not defined consistently.
        ///
        ///The drawing tools may not work as expected..
        /// </summary>
        internal static string InconsistentToolboxDef {
            get {
                return ResourceManager.GetString("InconsistentToolboxDef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to this directory and run &quot;make&quot; to build your project..
        /// </summary>
        internal static string InstrHowToMake {
            get {
                return ResourceManager.GetString("InstrHowToMake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory path that you&apos;ve chosen contains at least one space (&apos; &apos;).
        ///
        ///While this is a valid Windows path, the spaces will cause problems for the development tools and you will not be able to build your project.
        ///
        ///Please select a path that does not contain any spaces..
        /// </summary>
        internal static string InvalidPath {
            get {
                return ResourceManager.GetString("InvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Path.
        /// </summary>
        internal static string InvalidPathTitle {
            get {
                return ResourceManager.GetString("InvalidPathTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry - Not Yet Implemented.
        /// </summary>
        internal static string NYI {
            get {
                return ResourceManager.GetString("NYI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save changes to current document before closing?.
        /// </summary>
        internal static string SaveChanges {
            get {
                return ResourceManager.GetString("SaveChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the directory where you want to store the exported files:.
        /// </summary>
        internal static string SelectExportDir {
            get {
                return ResourceManager.GetString("SelectExportDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}x{1} tiles ({2}x{3} pixels).
        /// </summary>
        internal static string SpriteSizeFormat {
            get {
                return ResourceManager.GetString("SpriteSizeFormat", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap tool_ellipse {
            get {
                object obj = ResourceManager.GetObject("tool_ellipse", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_ellipsefilled {
            get {
                object obj = ResourceManager.GetObject("tool_ellipsefilled", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_eraser {
            get {
                object obj = ResourceManager.GetObject("tool_eraser", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_eyedropper {
            get {
                object obj = ResourceManager.GetObject("tool_eyedropper", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_floodfill {
            get {
                object obj = ResourceManager.GetObject("tool_floodfill", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_gba {
            get {
                object obj = ResourceManager.GetObject("tool_gba", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_hilite {
            get {
                object obj = ResourceManager.GetObject("tool_hilite", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_hilite2 {
            get {
                object obj = ResourceManager.GetObject("tool_hilite2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_largegrid {
            get {
                object obj = ResourceManager.GetObject("tool_largegrid", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_line {
            get {
                object obj = ResourceManager.GetObject("tool_line", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_nds {
            get {
                object obj = ResourceManager.GetObject("tool_nds", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_number {
            get {
                object obj = ResourceManager.GetObject("tool_number", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_pencil {
            get {
                object obj = ResourceManager.GetObject("tool_pencil", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_rect {
            get {
                object obj = ResourceManager.GetObject("tool_rect", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_rectfilled {
            get {
                object obj = ResourceManager.GetObject("tool_rectfilled", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_rubberstamp {
            get {
                object obj = ResourceManager.GetObject("tool_rubberstamp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_screen {
            get {
                object obj = ResourceManager.GetObject("tool_screen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_select {
            get {
                object obj = ResourceManager.GetObject("tool_select", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_shift {
            get {
                object obj = ResourceManager.GetObject("tool_shift", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_shift_down {
            get {
                object obj = ResourceManager.GetObject("tool_shift_down", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_shift_down_hilite {
            get {
                object obj = ResourceManager.GetObject("tool_shift_down_hilite", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_shift_left {
            get {
                object obj = ResourceManager.GetObject("tool_shift_left", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_shift_left_hilite {
            get {
                object obj = ResourceManager.GetObject("tool_shift_left_hilite", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_shift_right {
            get {
                object obj = ResourceManager.GetObject("tool_shift_right", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_shift_right_hilite {
            get {
                object obj = ResourceManager.GetObject("tool_shift_right_hilite", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_shift_up {
            get {
                object obj = ResourceManager.GetObject("tool_shift_up", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_shift_up_hilite {
            get {
                object obj = ResourceManager.GetObject("tool_shift_up_hilite", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tool_smallgrid {
            get {
                object obj = ResourceManager.GetObject("tool_smallgrid", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: .
        /// </summary>
        internal static string WARNING {
            get {
                return ResourceManager.GetString("WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resizing the sprite will cause some tiles to be clipped and the associated data will be lost.
        ///Are you sure you want to resize the sprite?.
        /// </summary>
        internal static string WarnSpriteResizeClip {
            get {
                return ResourceManager.GetString("WarnSpriteResizeClip", resourceCulture);
            }
        }
    }
}
