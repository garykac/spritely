// animation.cpp
// Animation routines.
// This file was automatically generated by Spritely %%_VERSION_%%

#include "animation.h"
#include "object_utils.h"

// Initialize the animation info for a single object
//
// Parameters:
//   <ai> - AnimationInfo struct (usually defined in game_state.h)
//   <object> - index of the object that you want to animate
//   <first> - sprite index of the first frame in the animation loop
//   <last> - sprite index of the last frame in the animation loop
//   <updfreq> - update frequency
void InitAnimation(AnimationInfo *ai, int object, int first, int last, int updfreq) {
	// Record the animation parameters.
	ai->object_id = object;
	ai->first_sprite = first;
	ai->last_sprite = last;
	ai->upd_freq = updfreq;

	// Initialize the animation.
	ai->current_frame = first;
	ai->update_counter = updfreq;
}

void SetAnimationFrame(AnimationInfo *ai, int frame) {
	// Don't allow the sprite to be set outside of the first/last
	// sprite loop.
	if (frame < ai->first_sprite || frame > ai->last_sprite)
		return;

	// Update the object to go to the new frame (sprite).
	ai->current_frame = frame;
	SetObjectSprite(ai->object_id, frame);
}

void UpdateAnimation(AnimationInfo *ai) {
	ai->update_counter--;

	if (ai->update_counter == 0) {
		// Advance to the next frame.
		ai->current_frame++;

		// Loop back to the beginning if we go past the end.
		if (ai->current_frame > ai->last_sprite)
			ai->current_frame = ai->first_sprite;

		// Update the object to use the new sprite.
		SetObjectSprite(ai->object_id, ai->current_frame);

		// Reset the frame rate counter.
		ai->update_counter = ai->upd_freq;
	}
}
