// sprites.h
// %%_PLATFORM_%% sprite data
// This file was automatically generated by Spritely %%_VERSION_%%

#ifndef _SPRITES_H_
#define _SPRITES_H_

#include "palettes.h"

typedef struct {
	// Index (into SpriteInfo) of first sprite.
	short int first_sprite;
	// Total number of sprites in this spriteset.
	short int num_sprites;
	// Total number of tiles in this spriteset.
	short int num_tiles;
	// Index (into SpritePaletteInfo) of palette.
	short int palette_id;
} SpritesetInfoStruct;

// Structure to store basic information for each sprite
typedef struct {
	// Index (into SpriteTiles) of first tile for this sprite.
	int first_tile;
	short int num_tiles;
	int width;
	int height;
	// For 16-color palettes, this is the subpalette index for this sprite.
	int subpalette_id;
	int mask_index;
	int shape;
	int size;
} SpriteInfoStruct;

// These sprite/palette data arrays are defined in sprites.cpp

// General info about each foreground ("sprite") palette.
extern const PaletteInfoStruct SpritePaletteInfo[];

// Color data for all the sprite palettes.
extern const unsigned short int SpritePalettes[];

// General info about each Spriteset.
extern const SpritesetInfoStruct SpritesetInfo[];

// General info about each Sprite.
extern const SpriteInfoStruct SpriteInfo[];

// Sprite tile data.
extern const unsigned char SpriteTiles[];

// Sprite collision bitmasks (used for pixel-perfect collision detection).
extern const unsigned long int SpriteMasks[];

// Number of (foreground) palettes.
const int kNumPalettes = %%_NUM_PALETTES_%%;

// Number of (foreground) spritesets.
const int kNumSpritesets = %%_NUM_SPRITESETS_%%;

// Total number of sprites in all (foreground) spritesets.
const int kTotalSprites = %%_NUM_SPRITES_%%;

// Total number of tiles in all (foreground) spritesets.
const int kTotalTiles = %%_NUM_TILES_%%;

// Spriteset IDs
%%_SPRITESET_IDS_%%

// Sprite IDs
%%_SPRITE_IDS_%%

#endif	// _SPRITES_H_
